diff --git a/services/core/java/com/android/server/AlarmManagerService.java b/services/core/java/com/android/server/AlarmManagerService.java
index 65a5c23..7dccb76 100644
--- a/services/core/java/com/android/server/AlarmManagerService.java
+++ b/services/core/java/com/android/server/AlarmManagerService.java
@@ -694,6 +694,10 @@ class AlarmManagerService extends SystemService {
             return;
         }
 
+	if(1 == 1){
+	   Slog.d("ywz","type:"+type);
+	    return;
+	}
         // Sanity check the window length.  This will catch people mistakenly
         // trying to pass an end-of-window timestamp rather than a duration.
         if (windowLength > AlarmManager.INTERVAL_HALF_DAY) {
@@ -702,6 +706,14 @@ class AlarmManagerService extends SystemService {
             windowLength = AlarmManager.INTERVAL_HOUR;
         }
 
+	int alarmType = type;	
+	if (alarmType == 0) {
+	    alarmType = 1;
+	} else if (alarmType == 2) {
+	    alarmType = 3;
+	}
+
+
         // Sanity check the recurrence interval.  This will catch people who supply
         // seconds when the API expects milliseconds.
         if (interval > 0 && interval < MIN_INTERVAL) {
@@ -741,6 +753,7 @@ class AlarmManagerService extends SystemService {
         final int userId = UserHandle.getCallingUserId();
 
         synchronized (mLock) {
+	    type = alarmType;
             if (DEBUG_BATCH) {
                 Slog.v(TAG, "set(" + operation + ") : type=" + type
                         + " triggerAtTime=" + triggerAtTime + " win=" + windowLength
@@ -805,8 +818,9 @@ class AlarmManagerService extends SystemService {
                         "AlarmManager.set");
             }
 
-            setImpl(type, triggerAtTime, windowLength, interval, operation,
-                    windowLength == AlarmManager.WINDOW_EXACT, workSource, alarmClock);
+	    Slog.d("ywz","setImpl----");
+            //setImpl(type, triggerAtTime, windowLength, interval, operation,
+            //        windowLength == AlarmManager.WINDOW_EXACT, workSource, alarmClock);
         }
 
         @Override
@@ -870,7 +884,7 @@ class AlarmManagerService extends SystemService {
 
     void dumpImpl(PrintWriter pw) {
         synchronized (mLock) {
-            pw.println("Current Alarm Manager state:");
+            pw.println("ywz 1044 Current Alarm Manager state:");
             final long nowRTC = System.currentTimeMillis();
             final long nowELAPSED = SystemClock.elapsedRealtime();
             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
